// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api

import (
	"github.com/game1991/layout/helloworld/dal/query"
	"github.com/game1991/layout/helloworld/internal/conf"
	"github.com/game1991/layout/helloworld/internal/controller"
	"github.com/game1991/layout/helloworld/internal/pkg/store"
	"github.com/game1991/layout/helloworld/internal/repository"
	"github.com/game1991/layout/helloworld/internal/service"
	"gorm.io/gen"
)

// Injectors from wire.go:

func wireApp(server *conf.Server, session *conf.Session, config store.Config, arg ...gen.DOOption) (*APP, func(), error) {
	db, cleanup, err := store.NewMySQL(config)
	if err != nil {
		return nil, nil, err
	}
	queryQuery := query.Use(db, arg...)
	greeterInter := repository.NewGreeterInter(queryQuery)
	userInter := repository.NewUserInter(queryQuery)
	greeterSrv := service.NewGreeterSrv(greeterInter, userInter)
	userSrv := service.NewUserSrv(userInter, session)
	serviceService := service.NewService(greeterSrv, userSrv)
	handler := controller.NewHandler(serviceService, session)
	app := newApp(server, handler, serviceService)
	return app, func() {
		cleanup()
	}, nil
}
